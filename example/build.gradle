apply plugin: 'com.android.application'
apply plugin: 'pmd'
apply plugin: 'findbugs'

android {

    compileSdkVersion conf.compileSdk
    buildToolsVersion conf.buildTools

    defaultConfig {
        minSdkVersion conf.minSdk
        targetSdkVersion conf.targetSdk
        versionCode gitVersionCode
        versionName gitVersionName
        applicationId "com.schibsted.account.example"
        missingDimensionStrategy 'default', 'singledex', 'multidex'

        manifestPlaceholders = [
                schacc_client_name:"This is my client",
                schacc_redirect_scheme:"myschemelol",
                schacc_redirect_host:"myhostlol",
        ]
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintConfig file("${rootProject.rootDir}/config/lint.xml")
        htmlOutput file("${buildDir}/reports/checkstyle.html")
        warningsAsErrors true
        checkAllWarnings true
        xmlReport false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation"com.android.support:appcompat-v7:$libs.support"
    implementation "com.android.support.constraint:constraint-layout:$libs.constraintLayout"
    implementation project(':ui')
    implementation project(':smartlock')
}

task findbugs(type: FindBugs, dependsOn: 'assemble', group: 'verification') {
    excludeFilter = file("${rootProject.rootDir}/config/findbugs.xml")
    source = android.sourceSets.main.java.srcDirs
    classes = fileTree("$buildDir/intermediates/classes")
    classpath = files()

    reports {
        xml.enabled = false
        html.enabled = true
        html.setDestination(file("$buildDir/reports/findbugs.html"))
    }
}

task pmd(type: Pmd, dependsOn: 'assemble', group: 'verification') {
    ruleSetFiles = files("${rootProject.rootDir}/config/pmd.xml")
    source = android.sourceSets.main.java.srcDirs
    include '**/*.java'
    ignoreFailures = false

    reports {
        xml.enabled = false
        html.enabled = true
        html.destination file("$buildDir/reports/pmd.html")
    }
}
